"""
RAG-—Å–∏—Å—Ç–µ–º–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –Ω–∞—É—á–Ω–æ–π –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ã –æ –ª–∏–∑–æ–±–∞–∫—Ç–µ—Ä–∏—è—Ö
–û–±–ª–∞—á–Ω–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è Streamlit Cloud
"""

import streamlit as st
import sys
import os
import tempfile
import requests
from pathlib import Path
import json

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="Lysobacter RAG System - Cloud Demo",
    page_icon="üî¨",
    layout="wide",
    initial_sidebar_state="expanded"
)

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
st.title("üî¨ RAG-—Å–∏—Å—Ç–µ–º–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –Ω–∞—É—á–Ω–æ–π –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ã –æ –ª–∏–∑–æ–±–∞–∫—Ç–µ—Ä–∏—è—Ö")
st.subheader("–û–±–ª–∞—á–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è")

# –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –¥–µ–º–æ –≤–µ—Ä—Å–∏–∏
st.warning("""
**–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è**
–≠—Ç–æ —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å–∏—Å—Ç–µ–º—ã –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏. 
–ü–æ–ª–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å –≤–µ–∫—Ç–æ—Ä–Ω–æ–π –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö (8000+ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–æ–≤) –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–µ.
""")

def load_demo_data():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ"""
    demo_docs = [
        {
            "title": "Lysobacter capsici sp. nov.",
            "content": "–®—Ç–∞–º–º GW1-59T –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π –≤–∏–¥ Lysobacter capsici. –ö–ª–µ—Ç–∫–∏ –ø–∞–ª–æ—á–∫–æ–≤–∏–¥–Ω—ã–µ, 0.5-0.8 √ó 1.5-3.0 –º–∫–º. –ì—Ä–∞–º–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ, –ø–æ–¥–≤–∏–∂–Ω—ã–µ. –û–ø—Ç–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Ä–æ—Å—Ç–∞ 28¬∞C, pH 7.0-7.5.",
            "metadata": {"source": "Demo", "type": "taxonomic"}
        },
        {
            "title": "Lysobacter antibioticus YC5194",
            "content": "–®—Ç–∞–º–º YC5194 –≤—ã–¥–µ–ª–µ–Ω –∏–∑ –ø–æ—á–≤—ã. –û–±–ª–∞–¥–∞–µ—Ç –∞–Ω—Ç–∏–±–∞–∫—Ç–µ—Ä–∏–∞–ª—å–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é –ø—Ä–æ—Ç–∏–≤ –ø–∞—Ç–æ–≥–µ–Ω–æ–≤ —Ä–∞—Å—Ç–µ–Ω–∏–π. –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç Œ≤-–ª–∞–∫—Ç–∞–º–Ω—ã–µ –∞–Ω—Ç–∏–±–∏–æ—Ç–∏–∫–∏ –∏ –¥—Ä—É–≥–∏–µ –±–∏–æ–∞–∫—Ç–∏–≤–Ω—ã–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è.",
            "metadata": {"source": "Demo", "type": "bioactivity"}
        },
        {
            "title": "–ú–æ—Ä—Ñ–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ª–∏–∑–æ–±–∞–∫—Ç–µ—Ä–∏–π",
            "content": "–õ–∏–∑–æ–±–∞–∫—Ç–µ—Ä–∏–∏ - –ø–∞–ª–æ—á–∫–æ–≤–∏–¥–Ω—ã–µ –±–∞–∫—Ç–µ—Ä–∏–∏ —Ä–∞–∑–º–µ—Ä–æ–º 0.3-0.8 √ó 1.2-5.0 –º–∫–º. –ö–ª–µ—Ç–∫–∏ –ø–æ–¥–≤–∏–∂–Ω—ã–µ –±–ª–∞–≥–æ–¥–∞—Ä—è –ø–æ–ª—è—Ä–Ω—ã–º –∂–≥—É—Ç–∏–∫–∞–º. –û–±—Ä–∞–∑—É—é—Ç –∂–µ–ª—Ç—ã–µ –∫–æ–ª–æ–Ω–∏–∏ –Ω–∞ –ø–∏—Ç–∞—Ç–µ–ª—å–Ω—ã—Ö —Å—Ä–µ–¥–∞—Ö.",
            "metadata": {"source": "Demo", "type": "morphology"}
        }
    ]
    return demo_docs

def demo_rag_query(query, docs):
    """–ü—Ä–æ—Å—Ç–æ–π –¥–µ–º–æ-–ø–æ–∏—Å–∫ –ø–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º"""
    query_lower = query.lower()
    results = []
    
    # –ü—Ä–æ—Å—Ç–æ–π –ø–æ–∏—Å–∫ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
    for doc in docs:
        score = 0
        content_lower = doc['content'].lower()
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏
        if 'gw1-59t' in query_lower and 'gw1-59t' in content_lower:
            score += 0.9
        elif 'yc5194' in query_lower and 'yc5194' in content_lower:
            score += 0.9
        elif '–º–æ—Ä—Ñ–æ–ª–æ–≥' in query_lower and ('–º–æ—Ä—Ñ–æ–ª–æ–≥' in content_lower or '—Ä–∞–∑–º–µ—Ä' in content_lower):
            score += 0.8
        elif any(word in content_lower for word in query_lower.split() if len(word) > 3):
            score += 0.5
        
        if score > 0:
            results.append((doc, score))
    
    # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏
    results.sort(key=lambda x: x[1], reverse=True)
    return [doc for doc, score in results[:3]]

def generate_demo_answer(query, relevant_docs):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –¥–µ–º–æ-–æ—Ç–≤–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"""
    if not relevant_docs:
        return "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É."
    
    # –ë–∞–∑–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã –æ—Ç–≤–µ—Ç–æ–≤
    if 'gw1-59t' in query.lower():
        return """
        **–®—Ç–∞–º–º GW1-59T (Lysobacter capsici sp. nov.)**
        
        üî¨ **–ú–æ—Ä—Ñ–æ–ª–æ–≥–∏—è:**
        - –ü–∞–ª–æ—á–∫–æ–≤–∏–¥–Ω—ã–µ –∫–ª–µ—Ç–∫–∏ —Ä–∞–∑–º–µ—Ä–æ–º 0.5-0.8 √ó 1.5-3.0 –º–∫–º
        - –ì—Ä–∞–º–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ –±–∞–∫—Ç–µ—Ä–∏–∏
        - –ü–æ–¥–≤–∏–∂–Ω—ã–µ (–Ω–∞–ª–∏—á–∏–µ –∂–≥—É—Ç–∏–∫–æ–≤)
        
        üå°Ô∏è **–£—Å–ª–æ–≤–∏—è —Ä–æ—Å—Ç–∞:**
        - –û–ø—Ç–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: 28¬∞C
        - –û–ø—Ç–∏–º–∞–ª—å–Ω—ã–π pH: 7.0-7.5
        
        üìö **–ò—Å—Ç–æ—á–Ω–∏–∫:** –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        """
    
    elif 'yc5194' in query.lower():
        return """
        **–®—Ç–∞–º–º YC5194 (Lysobacter antibioticus)**
        
        üå± **–ü—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏–µ:** –í—ã–¥–µ–ª–µ–Ω –∏–∑ –ø–æ—á–≤—ã
        
        üíä **–ë–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:**
        - –ê–Ω—Ç–∏–±–∞–∫—Ç–µ—Ä–∏–∞–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø—Ä–æ—Ç–∏–≤ –ø–∞—Ç–æ–≥–µ–Ω–æ–≤ —Ä–∞—Å—Ç–µ–Ω–∏–π
        - –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ Œ≤-–ª–∞–∫—Ç–∞–º–Ω—ã—Ö –∞–Ω—Ç–∏–±–∏–æ—Ç–∏–∫–æ–≤
        - –°–∏–Ω—Ç–µ–∑ –¥—Ä—É–≥–∏—Ö –±–∏–æ–∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
        
        üéØ **–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ:** –ë–∏–æ–∫–æ–Ω—Ç—Ä–æ–ª—å –≤ —Å–µ–ª—å—Å–∫–æ–º —Ö–æ–∑—è–π—Å—Ç–≤–µ
        
        üìö **–ò—Å—Ç–æ—á–Ω–∏–∫:** –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        """
    
    else:
        return f"""
        **–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞**
        
        –ù–∞–π–¥–µ–Ω–æ {len(relevant_docs)} —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:
        
        {chr(10).join([f"‚Ä¢ {doc['title']}: {doc['content'][:200]}..." for doc in relevant_docs])}
        
        üìö **–ò—Å—Ç–æ—á–Ω–∏–∫:** –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        """

# –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
with st.sidebar:
    st.header("‚ÑπÔ∏è –û —Å–∏—Å—Ç–µ–º–µ")
    st.info("""
    **–î–µ–º–æ –≤–µ—Ä—Å–∏—è –≤–∫–ª—é—á–∞–µ—Ç:**
    - 3 –æ–±—Ä–∞–∑—Ü–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
    - –ë–∞–∑–æ–≤—ã–π –ø–æ–∏—Å–∫ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
    - –ü—Ä–æ—Å—Ç—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –æ—Ç–≤–µ—Ç–æ–≤
    
    **–ü–æ–ª–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å–æ–¥–µ—Ä–∂–∏—Ç:**
    - 8000+ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–æ–≤ –∏–∑ 87 PDF
    - –í–µ–∫—Ç–æ—Ä–Ω—ã–π —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫
    - –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å LLM –º–æ–¥–µ–ª—è–º–∏
    - –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤–∏–¥–æ–≤
    """)
    
    st.header("üéØ –ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø—Ä–æ—Å–æ–≤")
    st.code("""
    ‚Ä¢ –ß—Ç–æ –∏–∑–≤–µ—Å—Ç–Ω–æ –æ —à—Ç–∞–º–º–µ GW1-59T?
    ‚Ä¢ –†–∞—Å—Å–∫–∞–∂–∏ –æ —à—Ç–∞–º–º–µ YC5194
    ‚Ä¢ –ö–∞–∫–∏–µ –º–æ—Ä—Ñ–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —É –ª–∏–∑–æ–±–∞–∫—Ç–µ—Ä–∏–π?
    """)
    
    st.header("üîó –ü–æ–ª–Ω–∞—è –≤–µ—Ä—Å–∏—è")
    st.markdown("""
    [GitHub Repository](https://github.com/ksushanik/lysobacter-rag-system)
    
    –î–ª—è –ø–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ —Å–º. –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –≤ README.
    """)

# –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
col1, col2 = st.columns([2, 1])

with col1:
    st.header("üí¨ –ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å")
    
    # –ü–æ–ª–µ –≤–≤–æ–¥–∞
    query = st.text_area(
        "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –æ –ª–∏–∑–æ–±–∞–∫—Ç–µ—Ä–∏—è—Ö:",
        placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ß—Ç–æ –∏–∑–≤–µ—Å—Ç–Ω–æ –æ —à—Ç–∞–º–º–µ GW1-59T?",
        height=100
    )
    
    # –ö–Ω–æ–ø–∫–∏
    col_btn1, col_btn2 = st.columns(2)
    with col_btn1:
        search_btn = st.button("üîç –ü–æ–∏—Å–∫", type="primary", use_container_width=True)
    with col_btn2:
        clear_btn = st.button("üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å", use_container_width=True)

with col2:
    st.header("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–µ–º–æ")
    st.metric("–î–æ–∫—É–º–µ–Ω—Ç–æ–≤", "3")
    st.metric("–¢–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö", "3")
    st.metric("–®—Ç–∞–º–º–æ–≤", "2")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞
if search_btn and query:
    with st.spinner("–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∑–∞–ø—Ä–æ—Å..."):
        # –ó–∞–≥—Ä—É–∑–∫–∞ –¥–µ–º–æ –¥–∞–Ω–Ω—ã—Ö
        demo_docs = load_demo_data()
        
        # –ü–æ–∏—Å–∫ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
        relevant_docs = demo_rag_query(query, demo_docs)
        
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞
        answer = generate_demo_answer(query, relevant_docs)
        
        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        st.header("üìã –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞")
        st.markdown(answer)
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        if relevant_docs:
            with st.expander("üìö –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏"):
                for i, doc in enumerate(relevant_docs, 1):
                    st.write(f"**{i}. {doc['title']}**")
                    st.write(doc['content'])
                    st.write(f"*–¢–∏–ø: {doc['metadata']['type']}*")
                    st.divider()

elif clear_btn:
    st.rerun()

# –ü–æ–¥–≤–∞–ª
st.divider()
st.markdown("""
<div style='text-align: center; color: #666;'>
    <p><strong>Lysobacter RAG System</strong> - –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è</p>
    <p>–°–∏—Å—Ç–µ–º–∞ –∞–Ω–∞–ª–∏–∑–∞ –Ω–∞—É—á–Ω–æ–π –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ã –æ –ª–∏–∑–æ–±–∞–∫—Ç–µ—Ä–∏—è—Ö</p>
    <p>¬© 2025 ksushanik | MIT License</p>
</div>
""", unsafe_allow_html=True) 