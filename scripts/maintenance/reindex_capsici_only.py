#!/usr/bin/env python3
"""
–ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü–µ—Ä–µ–∏–Ω–¥–µ–∫—Å–∞—Ü–∏—è —Å—Ç–∞—Ç—å–∏ –æ Lysobacter capsici
"""

import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏
sys.path.insert(0, str(Path(__file__).parent / "src"))
sys.path.insert(0, str(Path(__file__).parent))

from config import config
from lysobacter_rag.pdf_extractor.advanced_pdf_extractor import AdvancedPDFExtractor
from lysobacter_rag.indexer.indexer import Indexer

# –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è —É–ª—É—á—à–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
def improve_text_quality(text):
    import re
    # –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ —É–ª—É—á—à–µ–Ω–∏—è
    text = re.sub(r'(\w+)\s*-\s*(\d+)\s+T', r'\1-\2T', text)  # –®—Ç–∞–º–º—ã
    text = re.sub(r'(\d+)\s*[-‚Äì]\s*(\d+)\s*¬∞?\s*C', r'\1‚Äì\2¬∞C', text)  # –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞
    text = re.sub(r'(\d+)\s*\.\s*(\d+)', r'\1.\2', text)  # –ß–∏—Å–ª–∞
    return text

print("üö® –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü–ï–†–ï–ò–ù–î–ï–ö–°–ê–¶–ò–Ø CAPSICI")
print("=" * 60)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
indexer = Indexer()
pdf_extractor = AdvancedPDFExtractor()

# –ü—É—Ç—å –∫ —Å—Ç–∞—Ç—å–µ
capsici_file = "data/Lysobacter capsici_sp_nov_with_antimicro.pdf"

if not os.path.exists(capsici_file):
    print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {capsici_file}")
    exit(1)

print(f"üìÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é: {capsici_file}")

# –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —á–∞–Ω–∫–∏ –∏–∑ —ç—Ç–æ–≥–æ —Ñ–∞–π–ª–∞
print("üóëÔ∏è –£–¥–∞–ª—è—é —Å—Ç–∞—Ä—ã–µ —á–∞–Ω–∫–∏...")
try:
    collection = indexer.chroma_client.get_collection(name=config.CHROMA_COLLECTION_NAME)
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —á–∞–Ω–∫–∏ –∏–∑ —Ñ–∞–π–ª–∞
    old_chunks = collection.get(where={"source_pdf": "Lysobacter capsici_sp_nov_with_antimicro.pdf"})
    
    if old_chunks['ids']:
        collection.delete(ids=old_chunks['ids'])
        print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ {len(old_chunks['ids'])} —Å—Ç–∞—Ä—ã—Ö —á–∞–Ω–∫–æ–≤")
    else:
        print("‚ö†Ô∏è –°—Ç–∞—Ä—ã–µ —á–∞–Ω–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: {e}")

# –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç –≤—Å–µ–º–∏ –º–µ—Ç–æ–¥–∞–º–∏
print("\nüìñ –ò–ó–í–õ–ï–ß–ï–ù–ò–ï –¢–ï–ö–°–¢–ê:")
print("-" * 30)

try:
    # –ú–µ—Ç–æ–¥ 1: PyMuPDF4LLM (–ª—É—á—à–µ –¥–ª—è –Ω–∞—É—á–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤)
    print("1Ô∏è‚É£ PyMuPDF4LLM...")
    content_pymupdf = pdf_extractor.extract_with_pymupdf4llm(capsici_file)
    print(f"   –ò–∑–≤–ª–µ—á–µ–Ω–æ: {len(content_pymupdf)} —Å–∏–º–≤–æ–ª–æ–≤")
    
    # –ú–µ—Ç–æ–¥ 2: pdfplumber (—Ç–∞–±–ª–∏—Ü—ã)
    print("2Ô∏è‚É£ PDFplumber...")
    content_plumber = pdf_extractor.extract_with_pdfplumber(capsici_file)
    print(f"   –ò–∑–≤–ª–µ—á–µ–Ω–æ: {len(content_plumber)} —Å–∏–º–≤–æ–ª–æ–≤")
    
    # –ú–µ—Ç–æ–¥ 3: tabula (—Ç–∞–±–ª–∏—Ü—ã)
    print("3Ô∏è‚É£ Tabula...")
    content_tabula = pdf_extractor.extract_with_tabula(capsici_file)
    print(f"   –ò–∑–≤–ª–µ—á–µ–Ω–æ: {len(content_tabula)} —Å–∏–º–≤–æ–ª–æ–≤")
    
    # –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    all_content = f"{content_pymupdf}\n\n{content_plumber}\n\n{content_tabula}"
    
    print(f"\nüìä –í—Å–µ–≥–æ –∏–∑–≤–ª–µ—á–µ–Ω–æ: {len(all_content)} —Å–∏–º–≤–æ–ª–æ–≤")
    
    # –£–ª—É—á—à–∞–µ–º –∫–∞—á–µ—Å—Ç–≤–æ —Ç–µ–∫—Å—Ç–∞
    print("‚ú® –£–ª—É—á—à–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞ —Ç–µ–∫—Å—Ç–∞...")
    improved_content = improve_text_quality(all_content)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–≤—å—é
    print(f"\nüìù –ü–†–ï–í–¨–Æ –°–û–î–ï–†–ñ–ê–ù–ò–Ø:")
    print("-" * 40)
    preview = improved_content[:500]
    print(preview)
    print("...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
    print(f"\nüîç –ü–†–û–í–ï–†–ö–ê –ö–õ–Æ–ß–ï–í–´–• –•–ê–†–ê–ö–¢–ï–†–ò–°–¢–ò–ö:")
    print("-" * 40)
    
    keywords = [
        "rhizosphere", "pepper", "Capsicum",
        "YC5194", "type strain",
        "15-37", "temperature", 
        "0.3-0.5", "cell size",
        "65.4", "G+C",
        "catalase", "positive",
        "chitinase"
    ]
    
    found_keywords = []
    for keyword in keywords:
        if keyword.lower() in improved_content.lower():
            found_keywords.append(keyword)
            print(f"‚úÖ {keyword}")
        else:
            print(f"‚ùå {keyword}")
    
    print(f"\nüéØ –ù–∞–π–¥–µ–Ω–æ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤: {len(found_keywords)}/{len(keywords)}")
    
    if len(found_keywords) < 5:
        print("‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ú–∞–ª–æ –∫–ª—é—á–µ–≤—ã—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –Ω–∞–π–¥–µ–Ω–æ!")
        print("üìã –ü–æ–∫–∞–∑—ã–≤–∞—é –ø–µ—Ä–≤—ã–µ 1000 —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:")
        print("-" * 50)
        print(improved_content[:1000])
        print("-" * 50)
    
    # –ò–Ω–¥–µ–∫—Å–∏—Ä—É–µ–º
    print(f"\nüìö –ò–ù–î–ï–ö–°–ê–¶–ò–Ø...")
    print("-" * 20)
    
    success = indexer.add_document(
        content=improved_content,
        source_file=capsici_file
    )
    
    if success:
        print(f"‚úÖ –°—Ç–∞—Ç—å—è —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞–Ω–∞!")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        print(f"\nüß™ –¢–ï–°–¢ –ü–û–ò–°–ö–ê:")
        print("-" * 20)
        
        test_queries = [
            "YC5194 characteristics",
            "rhizosphere pepper",
            "temperature 15-37",
            "cell size 0.3",
            "G+C content 65.4"
        ]
        
        for query in test_queries:
            results = indexer.search(query, top_k=3)
            
            found_capsici = any('capsici' in r['metadata'].get('source_pdf', '').lower() for r in results)
            
            if found_capsici:
                print(f"‚úÖ '{query}' -> –Ω–∞–π–¥–µ–Ω–æ –≤ capsici")
            else:
                print(f"‚ùå '{query}' -> –ù–ï –Ω–∞–π–¥–µ–Ω–æ –≤ capsici")
        
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏!")

except Exception as e:
    print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()

print(f"\nüéâ –ü–ï–†–ï–ò–ù–î–ï–ö–°–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê!") 