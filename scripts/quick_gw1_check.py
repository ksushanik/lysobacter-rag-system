#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ —à—Ç–∞–º–º–µ GW1-59T
"""
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏
sys.path.insert(0, str(Path(__file__).parent.parent / "src"))
sys.path.insert(0, str(Path(__file__).parent.parent))

def quick_check_gw1():
    """–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ GW1-59T"""
    
    print("üîç –ë–´–°–¢–†–ê–Ø –ü–†–û–í–ï–†–ö–ê –î–ê–ù–ù–´–• –û –®–¢–ê–ú–ú–ï GW1-59T")
    print("=" * 50)
    
    try:
        from lysobacter_rag.indexer.indexer import Indexer
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–Ω–¥–µ–∫—Å–µ—Ä
        indexer = Indexer()
        
        # –ò—â–µ–º –¥–∞–Ω–Ω—ã–µ –æ GW1-59T
        search_queries = [
            "GW1-59T",
            "Lysobacter antarcticus",
            "temperature 30 growth",
            "pH 9 11 optimum",
            "genome 2.8 Mb"
        ]
        
        total_problems = 0
        total_found = 0
        
        for query in search_queries:
            print(f"\nüìù –ü–æ–∏—Å–∫: '{query}'")
            results = indexer.search(query, top_k=3)
            
            if results:
                print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(results)} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
                total_found += len(results)
                
                for i, result in enumerate(results, 1):
                    text = result['text']
                    
                    # –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–±–ª–µ–º
                    problems = []
                    if ': 0' in text:
                        problems.append("–†–∞–∑–æ—Ä–≤–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—É–ª—ã")
                    if 'GW1-5 9T' in text:
                        problems.append("–†–∞–∑–æ—Ä–≤–∞–Ω–Ω—ã–π —à—Ç–∞–º–º")
                    if len([w for w in text.split() if len(w) > 50]) > 0:
                        problems.append("–°–ª–∏—Ç–Ω—ã–µ —Å–ª–æ–≤–∞")
                    
                    total_problems += len(problems)
                    
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–∑–µ—Ü
                    print(f"      {i}. –î–ª–∏–Ω–∞: {len(text)} —Å–∏–º–≤–æ–ª–æ–≤")
                    if problems:
                        print(f"         ‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã: {', '.join(problems)}")
                    print(f"         üìÑ {text[:80]}...")
            else:
                print(f"   ‚ùå –†–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        
        # –û–±—â–∏–π –∞–Ω–∞–ª–∏–∑
        print(f"\nüìä –ò–¢–û–ì–û:")
        print(f"   –ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {total_found}")
        print(f"   –í—ã—è–≤–ª–µ–Ω–æ –ø—Ä–æ–±–ª–µ–º: {total_problems}")
        
        if total_problems > 5:
            print("üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–ë–õ–ï–ú–ê: –ú–Ω–æ–≥–æ –æ—à–∏–±–æ–∫ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è!")
        elif total_problems > 0:
            print("‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–∞—á–µ—Å—Ç–≤–æ–º –¥–∞–Ω–Ω—ã—Ö")
        else:
            print("‚úÖ –ö–∞—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏–µ–º–ª–µ–º–æ–µ")
        
        # –ü—Ä–æ–≤–µ—Ä–∏–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ GW1-59T
        print(f"\nüîç –ü–†–û–í–ï–†–ö–ê –ö–õ–Æ–ß–ï–í–´–• –î–ê–ù–ù–´–•:")
        gw1_results = indexer.search("GW1-59T Lysobacter antarcticus", top_k=10)
        
        if gw1_results:
            all_text = " ".join([r['text'] for r in gw1_results])
            
            key_data = {
                '–®—Ç–∞–º–º GW1-59T': 'GW1-59T' in all_text,
                '–í–∏–¥ antarcticus': 'antarcticus' in all_text.lower(),
                '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞': any(x in all_text for x in ['15-37', '30¬∞C', 'temperature']),
                'pH': any(x in all_text for x in ['pH 9', 'pH 11']),
                '–ì–µ–Ω–æ–º': any(x in all_text for x in ['2.8', 'genome', 'Mb']),
                '–û–∫—Å–∏–¥–∞–∑–∞': 'oxidase' in all_text.lower() or '–æ–∫—Å–∏–¥–∞–∑–∞' in all_text.lower()
            }
            
            for key, found in key_data.items():
                status = "‚úÖ" if found else "‚ùå"
                print(f"   {status} {key}")
            
            found_count = sum(key_data.values())
            completeness = (found_count / len(key_data)) * 100
            
            print(f"\nüìä –ü–û–õ–ù–û–¢–ê: {found_count}/{len(key_data)} ({completeness:.0f}%)")
            
            if completeness < 50:
                print("üö® –ö–†–ò–¢–ò–ß–ù–û: –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!")
                return False
            elif completeness < 80:
                print("‚ö†Ô∏è –ü–†–û–ë–õ–ï–ú–ê: –ú–Ω–æ–≥–æ –¥–∞–Ω–Ω—ã—Ö –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
                return False
            else:
                print("‚úÖ –î–∞–Ω–Ω—ã–µ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç")
                return True
        else:
            print("‚ùå –ö–†–ò–¢–ò–ß–ù–û: –î–∞–Ω–Ω—ã–µ –æ GW1-59T –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
            return False
            
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê: {str(e)}")
        return False

if __name__ == "__main__":
    success = quick_check_gw1()
    
    if not success:
        print("\nüí° –†–ï–ö–û–ú–ï–ù–î–£–ï–¢–°–Ø:")
        print("1. –ü–µ—Ä–µ–∏–Ω–¥–µ–∫—Å–∞—Ü–∏—è —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π PDF")
        print("2. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞")
        print("3. –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞—É—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
    
    sys.exit(0 if success else 1) 