#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ –≤–∞—à–µ–π RAG —Å–∏—Å—Ç–µ–º—ã vs NotebookLM
"""
import sys
sys.path.insert(0, 'src')

from lysobacter_rag.rag_pipeline import RAGPipeline

def demo_system_quality():
    print("üéØ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ö–ê–ß–ï–°–¢–í–ê –í–ê–®–ï–ô –°–ò–°–¢–ï–ú–´")
    print("=" * 60)
    
    rag = RAGPipeline()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ—Ç –∂–µ –∑–∞–ø—Ä–æ—Å, —á—Ç–æ —Å—Ä–∞–≤–Ω–∏–≤–∞–ª–∏ —Å NotebookLM
    query = "–ö–∞–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —à—Ç–∞–º–º–∞ Lysobacter capsici YC5194?"
    
    result = rag.ask_question(query, top_k=8)
    
    print(f"üìù –ó–∞–ø—Ä–æ—Å: {query}")
    print("\nü§ñ –û–¢–í–ï–¢ –í–ê–®–ï–ô –°–ò–°–¢–ï–ú–´:")
    print("-" * 50)
    print(result['answer'])
    
    print(f"\nüìä –ú–ï–¢–†–ò–ö–ò:")
    print(f"‚úÖ –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {result['confidence']:.1%}")
    print(f"üìö –ò—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: {len(result['sources'])}")
    print(f"üéØ YC5194 –≤ –æ—Ç–≤–µ—Ç–µ: {'–î–ê' if 'YC5194' in result['answer'].upper() else '–ù–ï–¢'}")
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫–∏
    capsici_sources = [s for s in result['sources'] if 'capsici' in s['document'].lower()]
    print(f"üìÑ –†–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤: {len(capsici_sources)}")
    
    print(f"\nüìö –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ù–´–ï –ò–°–¢–û–ß–ù–ò–ö–ò:")
    for i, source in enumerate(result['sources'][:5], 1):
        print(f"{i}. {source['document']}")
        print(f"   –¢–∏–ø: {source.get('chunk_type', 'N/A')}")
        print(f"   –†–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å: {source['relevance_score']:.3f}")

if __name__ == "__main__":
    demo_system_quality() 