#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–≥–æ PDF —ç–∫—Å—Ç—Ä–∞–∫—Ç–æ—Ä–∞
"""

import sys
from pathlib import Path
sys.path.insert(0, 'src')

def test_advanced_extractor():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π PDF —ç–∫—Å—Ç—Ä–∞–∫—Ç–æ—Ä"""
    
    print('üß™ –¢–ï–°–¢ –ü–†–û–î–í–ò–ù–£–¢–û–ì–û PDF –≠–ö–°–¢–†–ê–ö–¢–û–†–ê')
    print('=' * 50)
    
    try:
        from lysobacter_rag.pdf_extractor.advanced_pdf_extractor import AdvancedPDFExtractor
        
        # –ò—â–µ–º PDF —Ñ–∞–π–ª—ã
        data_dir = Path('data')
        pdfs = list(data_dir.glob('*capsici*.pdf'))
        if not pdfs:
            pdfs = list(data_dir.glob('*.pdf'))[:1]
        
        if pdfs:
            test_pdf = pdfs[0]
            print(f'üìÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º: {test_pdf.name}')
            
            # –°–æ–∑–¥–∞—ë–º —ç–∫—Å—Ç—Ä–∞–∫—Ç–æ—Ä
            extractor = AdvancedPDFExtractor()
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç
            print('‚è≥ –ò–∑–≤–ª–µ–∫–∞—é –¥–∞–Ω–Ω—ã–µ...')
            document = extractor.extract_document(test_pdf)
            
            print(f'‚úÖ –†–ï–ó–£–õ–¨–¢–ê–¢–´:')
            print(f'   üìù –¢–µ–∫—Å—Ç–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤: {document.extraction_stats["text_elements"]}')
            print(f'   üìä –¢–∞–±–ª–∏—á–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤: {document.extraction_stats["table_elements"]}')
            print(f'   üìà –ö–∞—á–µ—Å—Ç–≤–æ: {document.extraction_stats["quality_score"]:.1f}%')
            print(f'   üìÑ –°—Ç—Ä–∞–Ω–∏—Ü: {document.extraction_stats["total_pages"]}')
            print(f'   üîß –ú–µ—Ç–æ–¥—ã: {document.extraction_stats["methods_used"]}')
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã
            print()
            print('üìù –ü–†–ò–ú–ï–†–´ –ò–ó–í–õ–ï–ß–Å–ù–ù–û–ì–û –ö–û–ù–¢–ï–ù–¢–ê:')
            
            text_elements = [e for e in document.elements if e.element_type == 'text'][:2]
            table_elements = [e for e in document.elements if e.element_type == 'table'][:2]
            
            for i, element in enumerate(text_elements, 1):
                print(f'   –¢–µ–∫—Å—Ç {i}: {element.content[:100]}...')
            
            for i, element in enumerate(table_elements, 1):
                print(f'   –¢–∞–±–ª–∏—Ü–∞ {i}: {element.content[:100]}...')
            
            # –ò—â–µ–º YC5194
            yc5194_elements = [e for e in document.elements if 'YC5194' in e.content]
            print(f'üéØ –≠–ª–µ–º–µ–Ω—Ç–æ–≤ —Å YC5194: {len(yc5194_elements)}')
            
            if yc5194_elements:
                print(f'   –ü—Ä–∏–º–µ—Ä: {yc5194_elements[0].content[:150]}...')
                
            return document
        else:
            print('‚ùå PDF —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –ø–∞–ø–∫–µ data/')
            return None
            
    except Exception as e:
        print(f'‚ùå –û—à–∏–±–∫–∞: {e}')
        import traceback
        traceback.print_exc()
        return None

if __name__ == "__main__":
    test_advanced_extractor() 