#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ñ–∞–∫—Ç–æ–≤ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è "–¥–æ–¥—É–º—ã–≤–∞–Ω–∏—è" –¥–∞–Ω–Ω—ã—Ö
"""

import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), 'src'))

from lysobacter_rag.rag_pipeline.enhanced_rag import EnhancedRAGPipeline
from lysobacter_rag.rag_pipeline.fact_checker import FactChecker

def test_fact_validation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–∏—Å—Ç–µ–º—É –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ñ–∞–∫—Ç–æ–≤"""
    
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ñ–∞–∫—Ç–æ–≤")
    print("=" * 60)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É
    rag = EnhancedRAGPipeline(use_notebooklm_style=True)
    fact_checker = FactChecker()
    
    # –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
    query = "–ö–∞–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —à—Ç–∞–º–º–∞ Lysobacter capsici YC5194?"
    
    print(f"üìù –ó–∞–ø—Ä–æ—Å: {query}")
    print()
    
    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç —Å–∏—Å—Ç–µ–º—ã
    result = rag.ask_question(query, top_k=5)
    
    print("ü§ñ –û—Ç–≤–µ—Ç —Å–∏—Å—Ç–µ–º—ã:")
    print(result.answer[:500] + "..." if len(result.answer) > 500 else result.answer)
    print()
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    test_claims = {
        "temperature_range": "15-42¬∞C",
        "ph_range": "5.5-11.0"
    }
    
    print("üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–∫—Ç–æ–≤:")
    print("-" * 30)
    
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç –¥–ª—è fact_checker
    evidence_chunks = []
    for source in result.sources:
        chunk = {
            'text': source.get('text_preview', ''),
            'metadata': {'source': source.get('document', '')}
        }
        evidence_chunks.append(chunk)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥–æ–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    for claim_type, claim_value in test_claims.items():
        print(f"\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞: {claim_type} = {claim_value}")
        
        if claim_type == "temperature_range":
            fact_check = fact_checker.check_temperature_claim(
                claim_value, 
                evidence_chunks, 
                "YC5194"
            )
        elif claim_type == "ph_range":
            fact_check = fact_checker.check_ph_claim(
                claim_value,
                evidence_chunks,
                "YC5194"
            )
        
        print(f"‚úÖ –¢–æ—á–Ω–æ—Å—Ç—å: {'–î–∞' if fact_check.is_accurate else '–ù–ï–¢'}")
        print(f"üéØ –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {fact_check.confidence:.2f}")
        print(f"üìç –ò—Å—Ç–æ—á–Ω–∏–∫: {fact_check.source_strain}")
        print(f"üîç –î–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ: {fact_check.evidence[:100]}...")
        
        if not fact_check.is_accurate:
            print("‚ö†Ô∏è  –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–µ '–¥–æ–¥—É–º—ã–≤–∞–Ω–∏–µ' –¥–∞–Ω–Ω—ã—Ö!")
    
    print("\n" + "=" * 60)
    print("‚úÖ –¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ñ–∞–∫—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω")

def test_specific_temperature_issue():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –ø—Ä–æ–±–ª–µ–º—É —Å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–æ–π YC5194"""
    
    print("\nüå°Ô∏è  –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–Ω–æ–π –ø—Ä–æ–±–ª–µ–º—ã")
    print("=" * 60)
    
    rag = EnhancedRAGPipeline(use_notebooklm_style=True)
    
    # –¢–æ—á–Ω—ã–π –∑–∞–ø—Ä–æ—Å –æ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ
    result = rag.ask_question("Lysobacter capsici YC5194 —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω —Ä–æ—Å—Ç–∞", top_k=3)
    
    print("üìã –ù–∞–π–¥–µ–Ω–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏:")
    for i, source in enumerate(result.sources[:3], 1):
        preview = source.get('text_preview', '–ù–µ—Ç –ø—Ä–µ–≤—å—é')
        print(f"{i}. {preview[:150]}...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ YC5194
        if 'YC5194' in preview:
            print("   ‚úÖ –£–ø–æ–º–∏–Ω–∞–µ—Ç YC5194")
        else:
            print("   ‚ùå –ù–ï —É–ø–æ–º–∏–Ω–∞–µ—Ç YC5194 - –≤–æ–∑–º–æ–∂–Ω–æ –æ–±—â–∏–µ –¥–∞–Ω–Ω—ã–µ")
        print()
    
    print("ü§ñ –û—Ç–≤–µ—Ç —Å–∏—Å—Ç–µ–º—ã –æ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ:")
    temperature_part = ""
    for line in result.answer.split('\n'):
        if '—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä' in line.lower() or '¬∞C' in line or '–≥—Ä–∞–¥—É—Å' in line.lower():
            temperature_part += line + "\n"
    
    print(temperature_part if temperature_part else "–î–∞–Ω–Ω—ã–µ –æ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    
    # –ò—â–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
    import re
    temp_matches = re.findall(r'(\d+)\s*[-‚Äì]\s*(\d+)\s*¬∞?C', result.answer)
    if temp_matches:
        print(f"\nüéØ –û–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–Ω—ã–µ –¥–∏–∞–ø–∞–∑–æ–Ω—ã: {temp_matches}")
        for temp_min, temp_max in temp_matches:
            if temp_max == "42":
                print("‚ö†Ô∏è  –û–ë–ù–ê–†–£–ñ–ï–ù–ê –ü–†–û–ë–õ–ï–ú–ê: —Å–∏—Å—Ç–µ–º–∞ —É–∫–∞–∑–∞–ª–∞ 42¬∞C!")
                print("üìö –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω –ø–æ –∏—Å—Ç–æ—á–Ω–∏–∫—É: 15-37¬∞C")
            elif temp_max == "37":
                print("‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: 37¬∞C")

if __name__ == "__main__":
    test_fact_validation()
    test_specific_temperature_issue() 