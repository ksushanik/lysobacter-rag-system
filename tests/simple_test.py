#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –º–æ–¥–µ–ª–∏ DeepSeek —á–µ—Ä–µ–∑ OpenRouter
"""

import os
from dotenv import load_dotenv
from openai import OpenAI

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def test_deepseek():
    """–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç DeepSeek –º–æ–¥–µ–ª–∏"""
    
    print("üß™ –¢–µ—Å—Ç –º–æ–¥–µ–ª–∏ DeepSeek R1")
    print("=" * 40)
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    api_key = os.getenv("OPENROUTER_API_KEY")
    model = os.getenv("OPENROUTER_MODEL", "deepseek/deepseek-r1-0528-qwen3-8b:free")
    base_url = "https://openrouter.ai/api/v1"
    
    if not api_key:
        print("‚ùå API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
        return False
    
    print(f"‚úÖ API –∫–ª—é—á –Ω–∞–π–¥–µ–Ω (–¥–ª–∏–Ω–∞: {len(api_key)})")
    print(f"ü§ñ –ú–æ–¥–µ–ª—å: {model}")
    print(f"üåê URL: {base_url}")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç OpenAI –¥–ª—è OpenRouter
        client = OpenAI(
            api_key=api_key,
            base_url=base_url
        )
        
        print("\nüì§ –û—Ç–ø—Ä–∞–≤–ª—è—é —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å...")
        
        # –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
        response = client.chat.completions.create(
            model=model,
            messages=[
                {
                    "role": "user", 
                    "content": "–ü—Ä–∏–≤–µ—Ç! –û—Ç–≤–µ—Ç—å –∫—Ä–∞—Ç–∫–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ: —á—Ç–æ —Ç–∞–∫–æ–µ –ª–∏–∑–æ–±–∞–∫—Ç–µ—Ä–∏–∏?"
                }
            ],
            max_tokens=200,
            temperature=0.1
        )
        
        answer = response.choices[0].message.content.strip()
        
        print("‚úÖ –ó–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        print(f"üì® –û—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏:")
        print("-" * 40)
        print(answer)
        print("-" * 40)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏
        if hasattr(response, 'usage') and response.usage:
            usage = response.usage
            print(f"üìä –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ —Ç–æ–∫–µ–Ω–æ–≤: {usage.total_tokens}")
            print(f"   - –ó–∞–ø—Ä–æ—Å: {usage.prompt_tokens}")
            print(f"   - –û—Ç–≤–µ—Ç: {usage.completion_tokens}")
        
        # –ü—Ä–æ—Å—Ç–∞—è –æ—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞
        score = 0
        if len(answer) > 20:
            score += 1
        if '–ª–∏–∑–æ–±–∞–∫—Ç–µ—Ä' in answer.lower() or '–±–∞–∫—Ç–µ—Ä' in answer.lower():
            score += 1
        if any(c in '–∞–±–≤–≥–¥–µ—ë–∂–∑–∏–π–∫–ª–º–Ω–æ–ø—Ä—Å—Ç—É—Ñ—Ö—Ü—á—à—â—ä—ã—å—ç—é—è' for c in answer.lower()):
            score += 1
        
        print(f"‚≠ê –û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞: {score}/3")
        
        if score >= 2:
            print("üéâ –ú–æ–¥–µ–ª—å —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç–ª–∏—á–Ω–æ –¥–ª—è RAG-—Å–∏—Å—Ç–µ–º—ã!")
        else:
            print("‚ö†Ô∏è –ú–æ–¥–µ–ª—å —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –∫–∞—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–æ–≤ —Ç—Ä–µ–±—É–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
        error_msg = str(e).lower()
        if "401" in error_msg or "unauthorized" in error_msg:
            print("üí° –í–æ–∑–º–æ–∂–Ω–æ, –Ω–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á")
        elif "403" in error_msg or "forbidden" in error_msg:
            print("üí° –í–æ–∑–º–æ–∂–Ω–æ, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –∏–ª–∏ —Å—Ä–µ–¥—Å—Ç–≤")
        elif "404" in error_msg or "not found" in error_msg:
            print("üí° –í–æ–∑–º–æ–∂–Ω–æ, –º–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
        elif "rate" in error_msg or "limit" in error_msg:
            print("üí° –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤")
        else:
            print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
        
        return False

if __name__ == "__main__":
    success = test_deepseek()
    
    print("\n" + "=" * 40)
    if success:
        print("‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω! –ú–æ–¥–µ–ª—å –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.")
        print("\nüöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. python main.py - –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ PDF –∏ –∑–∞–ø—É—Å–∫–∞ RAG")
        print("2. streamlit run streamlit_app.py - –¥–ª—è –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞")
    else:
        print("‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.") 