#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π RAG —Å–∏—Å—Ç–µ–º—ã —Å –≥–∏–±—Ä–∏–¥–Ω—ã–º –ø–æ–∏—Å–∫–æ–º
"""
import sys
sys.path.insert(0, 'src')

from lysobacter_rag.rag_pipeline import RAGPipeline

def test_fixed_rag():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é RAG —Å–∏—Å—Ç–µ–º—É
    """
    print("üîß –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ô RAG –°–ò–°–¢–ï–ú–´")
    print("=" * 60)
    
    rag = RAGPipeline()
    
    # –ü—Ä–æ–±–ª–µ–º–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–Ω—å—à–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–ª–∏
    test_queries = [
        "–ö–∞–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —à—Ç–∞–º–º–∞ Lysobacter capsici YC5194?",
        "–ß—Ç–æ –∏–∑–≤–µ—Å—Ç–Ω–æ –æ —à—Ç–∞–º–º–µ GW1-59T?",
        "YC5194",
        "GW1-59T"
    ]
    
    for query in test_queries:
        print(f"\nüß™ –¢–ï–°–¢: '{query}'")
        print("-" * 50)
        
        try:
            result = rag.ask_question(query, top_k=5)
            
            answer = result['answer']
            sources = result['sources']
            confidence = result['confidence']
            
            print(f"‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω:")
            print(f"üéØ –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {confidence:.3f}")
            print(f"üìö –ò—Å—Ç–æ—á–Ω–∏–∫–æ–≤: {len(sources)}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∏—Å–∫–æ–º—ã–µ —à—Ç–∞–º–º—ã –≤ –æ—Ç–≤–µ—Ç–µ
            answer_upper = answer.upper()
            yc_found = 'YC5194' in answer_upper
            gw_found = 'GW1-59' in answer_upper
            
            if 'YC5194' in query and yc_found:
                print("üéØ ‚úÖ YC5194 –Ω–∞–π–¥–µ–Ω –≤ –æ—Ç–≤–µ—Ç–µ!")
            elif 'GW1-59' in query and gw_found:
                print("üéØ ‚úÖ GW1-59T –Ω–∞–π–¥–µ–Ω –≤ –æ—Ç–≤–µ—Ç–µ!")
            elif 'YC5194' in query or 'GW1-59' in query:
                print("‚ùå –ò—Å–∫–æ–º—ã–π —à—Ç–∞–º–º –ù–ï –Ω–∞–π–¥–µ–Ω –≤ –æ—Ç–≤–µ—Ç–µ")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫–∏
            print(f"\nüìÇ –ò—Å—Ç–æ—á–Ω–∏–∫–∏:")
            for source in sources[:3]:
                print(f"  - {source['document']} (—Å—Ç—Ä. {source.get('page_number', 'N/A')})")
                print(f"    –†–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å: {source['relevance_score']:.3f}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—á–∞–ª–æ –æ—Ç–≤–µ—Ç–∞
            print(f"\nüí¨ –ù–∞—á–∞–ª–æ –æ—Ç–≤–µ—Ç–∞:")
            print(f"   {answer[:300]}...")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        
        print("\n" + "="*60)

def demo_yc5194_fix():
    """
    –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º —Ä–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã YC5194
    """
    print("üéØ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –†–ï–®–ï–ù–ò–Ø –ü–†–û–ë–õ–ï–ú–´ YC5194")
    print("=" * 50)
    
    rag = RAGPipeline()
    
    query = "–ö–∞–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —à—Ç–∞–º–º–∞ Lysobacter capsici YC5194?"
    print(f"–ó–∞–ø—Ä–æ—Å: {query}")
    
    result = rag.ask_question(query, top_k=10)
    
    answer = result['answer']
    sources = result['sources']
    confidence = result['confidence']
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
    print(f"‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω: {'–î–∞' if answer else '–ù–µ—Ç'}")
    print(f"üéØ –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {confidence:.3f}")
    print(f"üìö –ò—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: {len(sources)}")
    print(f"üîç YC5194 –≤ –æ—Ç–≤–µ—Ç–µ: {'–î–∞' if 'YC5194' in answer.upper() else '–ù–µ—Ç'}")
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫–∏
    capsici_sources = [s for s in sources if 'capsici' in s['document'].lower()]
    print(f"üìÑ –ò—Å—Ç–æ—á–Ω–∏–∫–æ–≤ —Å 'capsici': {len(capsici_sources)}")
    
    print(f"\nüí¨ –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç:")
    print(answer)
    
    print(f"\nüìö –í—Å–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏:")
    for i, source in enumerate(sources, 1):
        print(f"{i}. {source['document']}")
        print(f"   –°—Ç—Ä–∞–Ω–∏—Ü–∞: {source.get('page_number', 'N/A')}")
        print(f"   –¢–∏–ø: {source.get('chunk_type', 'N/A')}")
        print(f"   –†–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å: {source['relevance_score']:.3f}")

if __name__ == "__main__":
    test_fixed_rag()
    print("\n\n")
    demo_yc5194_fix() 