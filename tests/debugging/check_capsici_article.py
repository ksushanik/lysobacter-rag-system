#!/usr/bin/env python3

import sys
sys.path.insert(0, 'src')

from lysobacter_rag.indexer.indexer import Indexer

print("üîç –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–¨–ò –û CAPSICI")
print("=" * 40)

indexer = Indexer()

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Å—Ç–∞—Ç—å—è –≤ –±–∞–∑–µ
results = indexer.search('Lysobacter capsici sp. nov', top_k=10)
print(f'üìä –ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–ª—è "Lysobacter capsici sp. nov": {len(results)}')

capsici_sources = set()
for r in results:
    source = r['metadata'].get('source_pdf', 'N/A')
    capsici_sources.add(source)
    if 'capsici' in source.lower():
        print(f'‚úÖ –ù–ê–ô–î–ï–ù–ê –°–¢–ê–¢–¨–Ø: {source}')
        print(f'   –†–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å: {r["relevance_score"]:.3f}')
        print(f'   –¢–∏–ø: {r["metadata"].get("chunk_type", "N/A")}')
        print(f'   –°—Ç—Ä–∞–Ω–∏—Ü–∞: {r["metadata"].get("page_number", "N/A")}')
        preview = r['text'][:200].replace('\n', ' ')
        print(f'   –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ: {preview}...')
        print()

print(f'üìö –í—Å–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏: {list(capsici_sources)}')

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
print(f'\nüéØ –ü–û–ò–°–ö –•–ê–†–ê–ö–¢–ï–†–ò–°–¢–ò–ö –ò–ó NOTEBOOKLM:')
print("-" * 40)

characteristics = [
    ("—Ä–∏–∑–æ—Å—Ñ–µ—Ä–∞ –ø–µ—Ä—Ü–∞", "rhizosphere of pepper"),
    ("15-37¬∞C", "15-37 degrees"),
    ("—Ä–∞–∑–º–µ—Ä –∫–ª–µ—Ç–æ–∫ 0.3-0.5", "cell size 0.3-0.5"),
    ("G+C 65.4", "G+C content 65.4"),
    ("–∫–∞—Ç–∞–ª–∞–∑–∞ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π", "catalase positive"),
    ("—Ö–∏—Ç–∏–Ω–∞–∑–∞", "chitinase")
]

for rus, eng in characteristics:
    # –ò—â–µ–º –Ω–∞ —Ä—É—Å—Å–∫–æ–º
    results_rus = indexer.search(rus, top_k=3)
    # –ò—â–µ–º –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º
    results_eng = indexer.search(eng, top_k=3)
    
    found_capsici = False
    for results, lang in [(results_rus, "—Ä—É—Å"), (results_eng, "eng")]:
        for r in results:
            if 'capsici' in r['metadata'].get('source_pdf', '').lower():
                print(f'‚úÖ {rus} -> –Ω–∞–π–¥–µ–Ω–æ –≤ capsici —Å—Ç–∞—Ç—å–µ ({lang})')
                found_capsici = True
                break
    
    if not found_capsici:
        print(f'‚ùå {rus} -> –ù–ï –Ω–∞–π–¥–µ–Ω–æ –≤ capsici —Å—Ç–∞—Ç—å–µ')

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - –µ—Å—Ç—å –ª–∏ –¥–µ—Ç–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ YC5194
print(f'\nüî¨ –ü–û–ò–°–ö –î–ï–¢–ê–õ–¨–ù–û–ì–û –û–ü–ò–°–ê–ù–ò–Ø YC5194:')
print("-" * 40)

detailed_search = indexer.search('YC5194 type strain isolated', top_k=5)
if detailed_search:
    for r in detailed_search:
        source = r['metadata'].get('source_pdf', 'N/A')
        if 'capsici' in source.lower():
            print(f'üéØ –î–ï–¢–ê–õ–¨–ù–û–ï –û–ü–ò–°–ê–ù–ò–ï –ù–ê–ô–î–ï–ù–û: {source}')
            print(f'   –†–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å: {r["relevance_score"]:.3f}')
            preview = r['text'][:300]
            print(f'   –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ: {preview}...')
        else:
            print(f'‚ùå –û–ø–∏—Å–∞–Ω–∏–µ –≤ –¥—Ä—É–≥–æ–π —Å—Ç–∞—Ç—å–µ: {source}')
else:
    print(f'‚ùå –î–µ—Ç–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ù–ï –Ω–∞–π–¥–µ–Ω–æ') 