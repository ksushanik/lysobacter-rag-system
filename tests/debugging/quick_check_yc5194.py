#!/usr/bin/env python3

import sys
sys.path.insert(0, 'src')

print("üîç –ë–´–°–¢–†–ê–Ø –ü–†–û–í–ï–†–ö–ê YC5194")
print("=" * 30)

try:
    from lysobacter_rag.indexer.indexer import Indexer
    from lysobacter_rag.rag_pipeline.rag_pipeline import RAGPipeline
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–¥–µ–∫—Å–µ—Ä
    indexer = Indexer()
    stats = indexer.get_collection_stats()
    print(f'üìä –í—Å–µ–≥–æ —á–∞–Ω–∫–æ–≤: {stats.get("total_chunks", 0)}')
    
    # –ü–æ–∏—Å–∫ YC5194
    yc_results = indexer.search('YC5194', top_k=3)
    print(f'üîç YC5194 –Ω–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {len(yc_results)}')
    
    if yc_results:
        for i, result in enumerate(yc_results, 1):
            rel = result.get('relevance_score', 0)
            source = result['metadata'].get('source_pdf', 'N/A')
            chunk_type = result['metadata'].get('chunk_type', 'N/A')
            print(f'   {i}. {source} ({chunk_type}) - {rel:.3f}')
    
    # –¢–µ—Å—Ç RAG
    print(f'\nü§ñ –¢–ï–°–¢ RAG:')
    rag = RAGPipeline()
    query = "Lysobacter capsici YC5194 —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏"
    response = rag.ask_question(query)
    
    print(f'üí¨ –°–æ–¥–µ—Ä–∂–∏—Ç YC5194: {"YC5194" in response["answer"]}')
    print(f'üìä –ò—Å—Ç–æ—á–Ω–∏–∫–æ–≤: {response["num_sources_used"]}')
    print(f'‚≠ê –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {response["confidence"]:.3f}')
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {e}") 