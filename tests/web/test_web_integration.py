#!/usr/bin/env python3

import requests
import time
import sys
sys.path.insert(0, 'src')

print("üåê –¢–ï–°–¢ –í–ï–ë-–ò–ù–¢–ï–ì–†–ê–¶–ò–ò")
print("=" * 30)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
try:
    response = requests.get("http://localhost:8501", timeout=5)
    if response.status_code == 200:
        print("‚úÖ –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ http://localhost:8501")
    else:
        print(f"‚ùå –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
        sys.exit(1)
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
    sys.exit(1)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
try:
    from lysobacter_rag.indexer.indexer import Indexer
    indexer = Indexer()
    stats = indexer.get_collection_stats()
    
    print(f"üìä –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:")
    print(f"   –í—Å–µ–≥–æ —á–∞–Ω–∫–æ–≤: {stats.get('total_chunks', 0)}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–∏—Å–∫ YC5194
    yc_results = indexer.search('YC5194', top_k=2)
    print(f"üîç YC5194 –ø–æ–∏—Å–∫:")
    print(f"   –ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {len(yc_results)}")
    
    if yc_results:
        print(f"   –õ—É—á—à–∞—è —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å: {yc_results[0].get('relevance_score', 0):.3f}")
        source = yc_results[0]['metadata'].get('source_pdf', 'N/A')
        print(f"   –ò—Å—Ç–æ—á–Ω–∏–∫: {source}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º RAG
    from lysobacter_rag.rag_pipeline.rag_pipeline import RAGPipeline
    rag = RAGPipeline()
    
    print(f"\nü§ñ RAG —Ç–µ—Å—Ç:")
    result = rag.ask_question("Lysobacter capsici YC5194")
    print(f"   –°–æ–¥–µ—Ä–∂–∏—Ç YC5194: {'YC5194' in result['answer']}")
    print(f"   –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {result['confidence']:.3f}")
    print(f"   –ò—Å—Ç–æ—á–Ω–∏–∫–æ–≤: {result['num_sources_used']}")
    
    print(f"\nüéâ –í–°–ï –°–ò–°–¢–ï–ú–´ –†–ê–ë–û–¢–ê–Æ–¢!")
    print(f"üíª –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://localhost:8501")
    print(f"üß¨ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {stats.get('total_chunks', 0)} —á–∞–Ω–∫–æ–≤")
    print(f"üîç YC5194: –Ω–∞–π–¥–µ–Ω —Å —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å—é {yc_results[0].get('relevance_score', 0):.3f}")
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
    import traceback
    traceback.print_exc() 