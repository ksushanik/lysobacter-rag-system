#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ NotebookLM-—Å—Ç–∏–ª—è RAG —Å–∏—Å—Ç–µ–º—ã
"""

import sys
import os
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

from lysobacter_rag.rag_pipeline.enhanced_rag import EnhancedRAGPipeline
import time

def test_notebooklm_style():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç NotebookLM-—Å—Ç–∏–ª—å –æ—Ç–≤–µ—Ç–æ–≤"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ NotebookLM-—Å—Ç–∏–ª—è RAG —Å–∏—Å—Ç–µ–º—ã")
    print("=" * 50)
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É —Å NotebookLM-—Å—Ç–∏–ª–µ–º
        print("üìö –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã —Å NotebookLM-—Å—Ç–∏–ª–µ–º...")
        rag_system = EnhancedRAGPipeline(use_notebooklm_style=True)
        
        # –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
        test_query = "—á—Ç–æ —Ç–µ–±–µ –∏–∑–≤–µ—Å—Ç–Ω–æ –æ —à—Ç–∞–º–º–µ SJ-36T?"
        
        print(f"\n‚ùì –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å: {test_query}")
        print("\nüîç –ì–µ–Ω–µ—Ä–∏—Ä—É—é –æ—Ç–≤–µ—Ç...")
        
        start_time = time.time()
        
        # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç
        result = rag_system.ask_question(
            query=test_query,
            top_k=8,
            use_notebooklm_style=True
        )
        
        end_time = time.time()
        
        print("\n" + "="*50)
        print("üìÑ –û–¢–í–ï–¢ –í –°–¢–ò–õ–ï NotebookLM:")
        print("="*50)
        print(result.answer)
        
        print("\n" + "="*50)
        print("üìä –ú–ï–¢–ê–î–ê–ù–ù–´–ï:")
        print("="*50)
        print(f"‚è±Ô∏è –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {end_time - start_time:.2f} —Å–µ–∫")
        print(f"üéØ –¢–∏–ø –∑–∞–ø—Ä–æ—Å–∞: {result.query_type}")
        print(f"üìà –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {result.confidence:.2f}")
        print(f"üìö –ò—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: {result.num_sources_used}")
        print(f"üîß NotebookLM —Ä–µ–∂–∏–º: {result.metadata.get('notebooklm_mode', False)}")
        print(f"üìè –î–ª–∏–Ω–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞: {result.metadata.get('context_length', 0)} —Å–∏–º–≤–æ–ª–æ–≤")
        
        print("\n" + "="*50)
        print("üîó –ò–°–¢–û–ß–ù–ò–ö–ò:")
        print("="*50)
        for i, source in enumerate(result.sources[:3], 1):
            print(f"{i}. {source.get('source', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫')}")
            if 'relevance' in source:
                print(f"   –†–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å: {source['relevance']:.2f}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {str(e)}")
        return False

def compare_styles():
    """–°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∏ NotebookLM —Å—Ç–∏–ª–∏"""
    
    print("\n" + "="*50)
    print("üîÑ –°–†–ê–í–ù–ï–ù–ò–ï –°–¢–ò–õ–ï–ô")
    print("="*50)
    
    try:
        query = "—á—Ç–æ —Ç–µ–±–µ –∏–∑–≤–µ—Å—Ç–Ω–æ –æ —à—Ç–∞–º–º–µ SJ-36T?"
        
        # –¢–µ—Å—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ —Å—Ç–∏–ª—è
        print("\nüìù –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Å—Ç–∏–ª—å...")
        rag_standard = EnhancedRAGPipeline(use_notebooklm_style=False)
        result_standard = rag_standard.ask_question(query, use_notebooklm_style=False)
        
        # –¢–µ—Å—Ç NotebookLM —Å—Ç–∏–ª—è
        print("üìö NotebookLM —Å—Ç–∏–ª—å...")
        rag_notebooklm = EnhancedRAGPipeline(use_notebooklm_style=True)
        result_notebooklm = rag_notebooklm.ask_question(query, use_notebooklm_style=True)
        
        print("\n" + "="*30 + " –°–¢–ê–ù–î–ê–†–¢–ù–´–ô " + "="*30)
        print(result_standard.answer[:500] + "...")
        
        print("\n" + "="*30 + " NOTEBOOKLM " + "="*30)
        print(result_notebooklm.answer[:500] + "...")
        
        print("\nüìä –°–†–ê–í–ù–ï–ù–ò–ï –•–ê–†–ê–ö–¢–ï–†–ò–°–¢–ò–ö:")
        print(f"–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π - –î–ª–∏–Ω–∞: {len(result_standard.answer)}, –ò—Å—Ç–æ—á–Ω–∏–∫–∏: {result_standard.num_sources_used}")
        print(f"NotebookLM  - –î–ª–∏–Ω–∞: {len(result_notebooklm.answer)}, –ò—Å—Ç–æ—á–Ω–∏–∫–∏: {result_notebooklm.num_sources_used}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è: {str(e)}")
        return False

if __name__ == "__main__":
    print("üß¨ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω–æ–π RAG —Å–∏—Å—Ç–µ–º—ã –≤ —Å—Ç–∏–ª–µ NotebookLM")
    print("=" * 70)
    
    # –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç
    success1 = test_notebooklm_style()
    
    # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å—Ç–∏–ª–µ–π
    success2 = compare_styles()
    
    if success1 and success2:
        print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        print("- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ NotebookLM-—Å—Ç–∏–ª—å –¥–ª—è –Ω–∞—É—á–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ —à—Ç–∞–º–º–æ–≤")
        print("- –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Å—Ç–∏–ª—å –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤")
        print("- NotebookLM-—Å—Ç–∏–ª—å –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –±–æ–ª–µ–µ —Å–≤—è–∑–Ω–æ–µ –ø–æ–≤–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ")
    else:
        print("\n‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã")
        sys.exit(1) 