#!/usr/bin/env python3
"""
–î–µ–º–æ —Ç–µ—Å—Ç RAG-—Å–∏—Å—Ç–µ–º—ã —Å —Ä–µ–∞–ª—å–Ω—ã–º —à—Ç–∞–º–º–æ–º –∏–∑ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
"""

import os
from pathlib import Path
from config import config
from src.lysobacter_rag.data_processor import DataProcessor
from src.lysobacter_rag.indexer import Indexer
from src.lysobacter_rag.rag_pipeline import RAGPipeline

def create_demo_data():
    """–°–æ–∑–¥–∞–µ–º –¥–µ–º–æ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–µ–∫—Å—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –º—ã –∑–Ω–∞–µ–º"""
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞—Å—Å –¥–ª—è —ç–º—É–ª—è—Ü–∏–∏ ExtractedDocument
    class DemoDoc:
        def __init__(self, text, doc_type, metadata):
            self.text = text
            self.text_content = text  # –≠—Ç–æ –æ–∂–∏–¥–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä
            self.doc_type = doc_type
            self.metadata = metadata
            self.tables = []  # –ü—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü
            self.total_pages = 1  # –£–∫–∞–∑—ã–≤–∞–µ–º –æ–¥–Ω—É —Å—Ç—Ä–∞–Ω–∏—Ü—É
            self.source_pdf = metadata.get('source_pdf', 'demo.pdf')
    
    # –≠–º—É–ª–∏—Ä—É–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ —à—Ç–∞–º–º–∞—Ö, –∫–æ—Ç–æ—Ä—ã–µ –º—ã –≤–∏–¥–µ–ª–∏ –≤ –ª–æ–≥–∞—Ö
    demo_docs = [
        DemoDoc(
            text='''
            Lysobacter daejeonensis sp. nov. strain GH1-9T and strain GH19-3T
            
            Phenotypic characteristics of strains GH1-9T, GH19-3T and other Lysobacter species.
            The strain GH1-9T was isolated from greenhouse soil and shows typical characteristics 
            of the genus Lysobacter. The cells are rod-shaped, Gram-negative, and motile.
            
            Growth occurs at temperatures from 15-42¬∞C, with optimal growth at 28-30¬∞C.
            The strain is positive for catalase and oxidase activities.
            
            Table 1. Phenotypic characteristics of strains GH1-9T, GH19-3T
            Characteristic     GH1-9T    GH19-3T    L. enzymogenes
            Temperature range  15-42¬∞C   15-40¬∞C    10-35¬∞C
            Optimal temp      28-30¬∞C   25-28¬∞C    25-28¬∞C
            pH range          6.0-9.0   6.5-8.5    6.0-8.0
            Catalase          +         +          +
            Oxidase           +         +          -
            ''',
            doc_type='text',
            metadata={
                'source_pdf': 'Lysobacter daejeonensis_sp_nov_a.pdf',
                'page_number': 1
            }
        ),
        DemoDoc(
            text='''
            Lysobacter mobilis sp. nov. strain 9NM-14T
            
            The characteristics of strain 9NM-14T are summarized in Table 1.
            Differential phenotypic characteristics of strain 9NM-14T compared to closely 
            related Lysobacter species.
            
            Strain 9NM-14T was isolated from rhizosphere soil and represents a novel species
            within the genus Lysobacter. The strain shows unique biochemical properties
            that distinguish it from other known species.
            
            Growth temperature: 15-40¬∞C (optimum 25-30¬∞C)
            pH range: 5.5-8.5 (optimum 7.0-7.5)
            NaCl tolerance: 0-3% (w/v)
            ''',
            doc_type='text',
            metadata={
                'source_pdf': 'Lysobacter mobilis.pdf',
                'page_number': 2
            }
        ),
        DemoDoc(
            text='''
            Lysobacter korlensis sp. nov. strains ZLD-17T and ZLD-29T
            
            Phenotypic characteristics of strains ZLD-17T and ZLD-29T and type strains 
            of species of the genus Lysobacter.
            
            Both strains were isolated from desert soil samples and show adaptations
            to arid environments. The strains are halotolerant and can grow in the
            presence of elevated salt concentrations.
            
            Key characteristics:
            - Cell morphology: Rod-shaped, 0.4-0.6 √ó 1.2-3.0 Œºm
            - Gram reaction: Negative
            - Motility: Positive (gliding motility)
            - Pigmentation: Yellow colonies on nutrient agar
            ''',
            doc_type='text',
            metadata={
                'source_pdf': 'Lysobacter korlensis.pdf', 
                'page_number': 1
            }
        )
    ]
    
    return demo_docs

def demo_rag_test():
    """–î–µ–º–æ —Ç–µ—Å—Ç –ø–æ–ª–Ω–æ–π RAG-—Å–∏—Å—Ç–µ–º—ã"""
    
    print("üß¨ –î–ï–ú–û –¢–ï–°–¢ RAG-–°–ò–°–¢–ï–ú–´ –õ–ò–ó–û–ë–ê–ö–¢–ï–†–ò–ô")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º –¥–µ–º–æ –¥–∞–Ω–Ω—ã–µ
    print("üìù –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ –¥–∞–Ω–Ω—ã—Ö...")
    demo_docs = create_demo_data()
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ {len(demo_docs)} –¥–µ–º–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    print(f"\nüîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö...")
    processor = DataProcessor()
    chunks = processor.process_documents(demo_docs)
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ {len(chunks)} —á–∞–Ω–∫–æ–≤")
    
    # –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å
    print(f"\nüóÉÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –≤–µ–∫—Ç–æ—Ä–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞...")
    indexer = Indexer()
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –∫–æ–ª–ª–µ–∫—Ü–∏—é
    try:
        indexer.delete_collection()
        print("üóëÔ∏è –°—Ç–∞—Ä–∞—è –∫–æ–ª–ª–µ–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞")
    except:
        print("‚ÑπÔ∏è –°—Ç–∞—Ä–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –Ω–µ –±—ã–ª–æ")
    
    indexer.index_chunks(chunks)
    print(f"‚úÖ –ò–Ω–¥–µ–∫—Å —Å–æ–∑–¥–∞–Ω –∏ –∑–∞–≥—Ä—É–∂–µ–Ω")
    
    # –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞
    print(f"\nüîç –¢–ï–°–¢ –ü–û–ò–°–ö–ê –ü–û –®–¢–ê–ú–ú–ê–ú")
    print("-" * 40)
    
    test_queries = [
        "GH1-9T",
        "—à—Ç–∞–º–º GH1-9T", 
        "Lysobacter daejeonensis",
        "9NM-14T",
        "ZLD-17T",
        "—Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —à—Ç–∞–º–º–æ–≤",
        "—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Ä–æ—Å—Ç–∞",
        "desert soil"
    ]
    
    for query in test_queries:
        print(f"\nüîé –ü–æ–∏—Å–∫: '{query}'")
        results = indexer.search(query, top_k=2)
        
        if results:
            for i, result in enumerate(results, 1):
                relevance = result.get('relevance_score', 0)
                source = result.get('metadata', {}).get('source_pdf', 'Unknown')
                text_preview = result.get('text', '')[:150] + '...'
                
                print(f"   {i}. –†–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å: {relevance:.3f}")
                print(f"      –ò—Å—Ç–æ—á–Ω–∏–∫: {source}")
                print(f"      –¢–µ–∫—Å—Ç: {text_preview}")
        else:
            print("   ‚ùå –†–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
    
    # –¢–µ—Å—Ç RAG Q&A
    print(f"\nü§ñ –¢–ï–°–¢ RAG Q&A")
    print("-" * 40)
    
    try:
        rag = RAGPipeline()
        
        questions = [
            "–†–∞—Å—Å–∫–∞–∂–∏ –æ —à—Ç–∞–º–º–µ GH1-9T",
            "–ö–∞–∫–∏–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é—Ç —à—Ç–∞–º–º—ã Lysobacter?",
            "–ì–¥–µ –±—ã–ª –≤—ã–¥–µ–ª–µ–Ω —à—Ç–∞–º–º 9NM-14T?",
            "–ö–∞–∫–∏–µ –º–æ—Ä—Ñ–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∏–º–µ—é—Ç —à—Ç–∞–º–º—ã ZLD-17T –∏ ZLD-29T?"
        ]
        
        for question in questions:
            print(f"\n‚ùì –í–æ–ø—Ä–æ—Å: {question}")
            
            try:
                response = rag.ask_question(question)
                
                print(f"üí¨ –û—Ç–≤–µ—Ç:")
                print(f"   {response['answer']}")
                print(f"üìä –ò—Å—Ç–æ—á–Ω–∏–∫–æ–≤: {response['num_sources_used']}")
                print(f"‚≠ê –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {response['confidence']:.2f}")
                
                if response.get('sources'):
                    print(f"üìö –ò—Å—Ç–æ—á–Ω–∏–∫–∏: {', '.join(response['sources'])}")
                    
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ RAG: {e}")
        return False
    
    return True

def interactive_demo():
    """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –¥–µ–º–æ —Ä–µ–∂–∏–º"""
    
    print(f"\nüéÆ –ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–´–ô –†–ï–ñ–ò–ú")
    print("=" * 60)
    print("–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞–≤–∞—Ç—å —Å–≤–æ–∏ –≤–æ–ø—Ä–æ—Å—ã!")
    print("–í–≤–µ–¥–∏—Ç–µ 'exit' –¥–ª—è –≤—ã—Ö–æ–¥–∞")
    print("-" * 40)
    
    try:
        rag = RAGPipeline()
        
        while True:
            question = input("\n‚ùì –í–∞—à –≤–æ–ø—Ä–æ—Å: ").strip()
            
            if question.lower() in ['exit', '–≤—ã—Ö–æ–¥', 'quit']:
                print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                break
                
            if not question:
                continue
                
            try:
                response = rag.ask_question(question)
                
                print(f"\nüí¨ –û—Ç–≤–µ—Ç:")
                print(f"{response['answer']}")
                print(f"\nüìä –ú–µ—Ç—Ä–∏–∫–∏: –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤: {response['num_sources_used']}, —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {response['confidence']:.2f}")
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")

if __name__ == "__main__":
    success = demo_rag_test()
    
    if success:
        print(f"\nüéâ –î–ï–ú–û –¢–ï–°–¢ –£–°–ü–ï–®–ù–û –ó–ê–í–ï–†–®–ï–ù!")
        
        start_interactive = input(f"\nüéÆ –ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º? (y/n): ").strip().lower()
        
        if start_interactive in ['y', 'yes', '–¥–∞', '–¥']:
            interactive_demo()
        else:
            print(f"\nüí° –î–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ:")
            print(f"   python demo_test.py")
    else:
        print(f"\n‚ùå –î–µ–º–æ —Ç–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é.") 