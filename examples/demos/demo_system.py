#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π —É–ª—É—á—à–µ–Ω–Ω–æ–π RAG —Å–∏—Å—Ç–µ–º—ã —Å DeepSeek R1
"""
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –∏–∑ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π –ø–∞–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞
project_root = Path(__file__).parent.parent.parent
sys.path.insert(0, str(project_root))
sys.path.insert(0, str(project_root / "src"))

def demo_system_features():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã –±–µ–∑ –≤—ã–∑–æ–≤–æ–≤ API"""
    
    print("üß¨ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø RAG –°–ò–°–¢–ï–ú–´ –° DEEPSEEK R1")
    print("=" * 60)
    
    try:
        from lysobacter_rag.rag_pipeline.enhanced_prompts import EnhancedPromptSystem
        from lysobacter_rag.indexer.indexer import Indexer
        from config import config
        
        print(f"ü§ñ –ò—Å–ø–æ–ª—å–∑—É–µ–º–∞—è –º–æ–¥–µ–ª—å: {config.OPENAI_MODEL}")
        print(f"üîó API URL: {config.OPENROUTER_BASE_URL}")
        
        # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–º–ø—Ç–æ–≤
        print(f"\nüìù –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –£–õ–£–ß–®–ï–ù–ù–´–• –ü–†–û–ú–ü–¢–û–í")
        print("=" * 50)
        
        enhanced_prompts = EnhancedPromptSystem()
        
        test_queries = [
            "–ß—Ç–æ –∏–∑–≤–µ—Å—Ç–Ω–æ –æ —à—Ç–∞–º–º–µ GW1-59T?",
            "–°—Ä–∞–≤–Ω–∏—Ç–µ –º–æ—Ä—Ñ–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ª–∏–∑–æ–±–∞–∫—Ç–µ—Ä–∏–π",
            "–û–±—ä—è—Å–Ω–∏—Ç–µ –º–µ—Ç–æ–¥—ã –≤—ã–¥–µ–ª–µ–Ω–∏—è –ª–∏–∑–æ–±–∞–∫—Ç–µ—Ä–∏–π",
            "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –¥–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫",
            "–ö–∞–∫ —Å–≤—è–∑–∞–Ω—ã –≥–µ–Ω–æ–º–Ω—ã–µ –∏ —Ñ–µ–Ω–æ—Ç–∏–ø–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ?"
        ]
        
        for i, query in enumerate(test_queries, 1):
            print(f"\nüîç –ó–∞–ø—Ä–æ—Å {i}: {query}")
            
            query_type = enhanced_prompts.detect_query_type(query)
            print(f"   üéØ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —Ç–∏–ø: {query_type}")
            
            if query_type in enhanced_prompts.prompts:
                prompt_template = enhanced_prompts.prompts[query_type]
                print(f"   üìã –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è: {query_type}")
                print(f"   üí° –§–æ–∫—É—Å –ø—Ä–æ–º–ø—Ç–∞: {get_prompt_focus(query_type.value)}")
            else:
                print(f"   üìã –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –±–∞–∑–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç")
        
        # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏
        print(f"\nüìö –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –°–ò–°–¢–ï–ú–´ –ò–ù–î–ï–ö–°–ê–¶–ò–ò")
        print("=" * 50)
        
        indexer = Indexer()
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–æ–ª–ª–µ–∫—Ü–∏–∏
        collection = indexer.collection
        count = collection.count()
        
        print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π:")
        print(f"   üìÑ –î–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏: {count}")
        print(f"   üè∑Ô∏è –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏: {config.CHROMA_COLLECTION_NAME}")
        print(f"   ü§ñ –ú–æ–¥–µ–ª—å —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤: {config.EMBEDDING_MODEL}")
        print(f"   üìÅ –ü—É—Ç—å –∫ –ë–î: {config.CHROMA_DB_PATH}")
        
        # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–∏—Å–∫–∞
        print(f"\nüîç –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ü–û–ò–°–ö–ê")
        print("=" * 40)
        
        test_search_query = "GW1-59T"
        print(f"üîé –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–∏—Å–∫: '{test_search_query}'")
        
        results = indexer.search(test_search_query, top_k=3)
        
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {len(results)}")
        
        for i, result in enumerate(results[:3], 1):
            print(f"\n   üìÑ –†–µ–∑—É–ª—å—Ç–∞—Ç {i}:")
            print(f"      üìã ID: {result.get('id', 'N/A')}")
            print(f"      üìä –†–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å: {result.get('distance', 0):.3f}")
            print(f"      üìö –î–æ–∫—É–º–µ–Ω—Ç: {result.get('document', 'N/A')}")
            print(f"      üìÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞: {result.get('page', 'N/A')}")
            
            if result.get('is_differential_table'):
                print(f"      üî¨ –î–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞: ‚úÖ")
            
            content = result.get('content', '')
            if len(content) > 100:
                print(f"      üìù –ö–æ–Ω—Ç–µ–Ω—Ç: {content[:100]}...")
            else:
                print(f"      üìù –ö–æ–Ω—Ç–µ–Ω—Ç: {content}")
        
        # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        print(f"\n‚öôÔ∏è –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –°–ò–°–¢–ï–ú–´")
        print("=" * 40)
        
        print(f"üìä –ù–∞—Å—Ç—Ä–æ–π–∫–∏ RAG:")
        print(f"   üéØ Top-K —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {config.RAG_TOP_K}")
        print(f"   üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {config.RAG_TEMPERATURE}")
        print(f"   üìè –†–∞–∑–º–µ—Ä —á–∞–Ω–∫–∞: {config.CHUNK_SIZE}")
        print(f"   üîÑ –ü–µ—Ä–µ–∫—Ä—ã—Ç–∏–µ —á–∞–Ω–∫–æ–≤: {config.CHUNK_OVERLAP}")
        print(f"   üé® –ü–æ—Ä–æ–≥ –Ω–µ—á–µ—Ç–∫–æ–≥–æ –ø–æ–∏—Å–∫–∞: {config.FUZZY_MATCH_THRESHOLD}%")
        
        print(f"\nüéØ –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏:")
        for i, model in enumerate(config.AVAILABLE_MODELS, 1):
            current = " ‚≠ê" if model == config.OPENAI_MODEL else ""
            print(f"   {i}. {model}{current}")
        
        print(f"\n‚úÖ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!")
        print(f"üß† –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ —Å DeepSeek R1")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏: {str(e)}")
        import traceback
        traceback.print_exc()
        return False

def get_prompt_focus(query_type: str) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ —Ñ–æ–∫—É—Å–∞ –ø—Ä–æ–º–ø—Ç–∞"""
    
    focuses = {
        'strain_analysis': '–î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ —à—Ç–∞–º–º–∞',
        'comparative_analysis': '–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤',
        'methodology': '–û–±—ä—è—Å–Ω–µ–Ω–∏–µ –º–µ—Ç–æ–¥–æ–≤ –∏ –ø—Ä–æ—Ü–µ–¥—É—Ä',
        'table_interpretation': '–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è —Ç–∞–±–ª–∏—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö',
        'synthesis': '–°–∏–Ω—Ç–µ–∑ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤'
    }
    
    return focuses.get(query_type, '–û–±—â–∏–π –∞–Ω–∞–ª–∏–∑')

def demo_web_interface():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ"""
    
    print(f"\nüåê –í–ï–ë-–ò–ù–¢–ï–†–§–ï–ô–°")
    print("=" * 30)
    
    print(f"üöÄ –ó–∞–ø—É—Å–∫ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:")
    print(f"   python run.py")
    print(f"")
    print(f"üåç –ü–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É:")
    print(f"   http://localhost:8501")
    print(f"")
    print(f"üí¨ –í –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ –º–æ–∂–Ω–æ:")
    print(f"   ‚Ä¢ –ó–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –æ –ª–∏–∑–æ–±–∞–∫—Ç–µ—Ä–∏—è—Ö")
    print(f"   ‚Ä¢ –í–∏–¥–µ—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")
    print(f"   ‚Ä¢ –ó–∞–≥—Ä—É–∂–∞—Ç—å –Ω–æ–≤—ã–µ PDF –¥–æ–∫—É–º–µ–Ω—Ç—ã")
    print(f"   ‚Ä¢ –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–æ–≤")

def demo_command_examples():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–∏–º–µ—Ä—ã –∫–æ–º–∞–Ω–¥ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    print(f"\nüõ†Ô∏è –ö–û–ú–ê–ù–î–´ –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
    print("=" * 40)
    
    commands = [
        {
            'command': 'python switch_model.py --list',
            'description': '–ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏'
        },
        {
            'command': 'python switch_model.py --test',
            'description': '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—É—â—É—é –º–æ–¥–µ–ª—å'
        },
        {
            'command': 'python test_enhanced_rag_simple.py',
            'description': '–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —É–ª—É—á—à–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã'
        },
        {
            'command': 'python run.py',
            'description': '–ó–∞–ø—É—Å—Ç–∏—Ç—å –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å'
        },
        {
            'command': 'python model_benchmark.py',
            'description': '–ë–µ–Ω—á–º–∞—Ä–∫ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π'
        }
    ]
    
    for cmd in commands:
        print(f"\nüìù {cmd['description']}:")
        print(f"   {cmd['command']}")

if __name__ == "__main__":
    print("üöÄ –ó–ê–ü–£–°–ö –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–ò –°–ò–°–¢–ï–ú–´")
    print("üß† RAG —Å–∏—Å—Ç–µ–º–∞ —Å DeepSeek R1 –¥–ª—è –ª–∏–∑–æ–±–∞–∫—Ç–µ—Ä–∏–π")
    print()
    
    success = demo_system_features()
    
    if success:
        demo_web_interface()
        demo_command_examples()
    
    print(f"\n{'='*60}")
    print("üéØ –ò–¢–û–ì:", "‚úÖ –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –†–ê–ë–û–¢–ï" if success else "‚ùå –¢–†–ï–ë–£–ï–¢–°–Ø –ù–ê–°–¢–†–û–ô–ö–ê")
    print("üß¨ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è!")
    
    sys.exit(0 if success else 1) 